# 웹 프로그래밍 - Maven
## Maven 이란?
- 애플리케이션을 개발하기 위해 반복적으로 진행해왔던 작업들을 지원하기 위하여 등장한 도구
- Maven을 사용하면 빌드, 패키징, 문서화, 테스트와 테스트 리포팅, git, 의존성관리, svn등과 같은 형상관리서버와 연동, 배포 등의 작업을 손쉽게 할 수 있다.
- CoC(Convention over Configuration)에 익숙하면 쉽게 사용할 수 있다.
	- 일종의 관습, 예를 들어 소스파일의 위치, 컴파일 파일들의 위치 등을 미리 정해놓은 것

### Maven을 사용할 때의 장점
- 편리한 의존성 라이브러리 관리
	- 직접 다운로드 받거나 하는 것을 하지 않아도 라이브러리를 사용할 수 있다.
- 팀원들과 일관된 방식으로 빌드를 수행할 수 있다.
- 다양한 플러그인을 자동화

### Maven 기본
- pom.xml
- 태그의 의미
	- project : pom.xml 파일의 최상위 루트 엘리먼트(Root Element)입니다.
	- modelVersion : POM model의 버전입니다. 
	- groupId : 프로젝트를 생성하는 조직의 고유 아이디를 결정합니다. 일반적으로 도메인 이름을 거꾸로 적습니다.
	- artifactId : 해당 프로젝트에 의하여 생성되는 artifact의 고유 아이디를 결정합니다. Maven을 이용하여  pom.xml을 빌드할 경우 다음과 같은 규칙으로 artifact가 생성됩니다. artifactid-version.packaging. 위 예의 경우 빌드할 경우 examples-1.0-SNAPSHOT.jar 파일이 생성됩니다.
	- packaging : 해당 프로젝트를 어떤 형태로 packaging 할 것인지 결정합니다. jar, war, ear 등이 해당됩니다.
	- version : 프로젝트의 현재 버전. 추후 살펴보겠지만 프로젝트가 개발 중일 때는 SNAPSHOT을 접미사로 사용합니다. Maven의 버전 관리 기능은 라이브러리 관리를 편하게 합니다.
	- name : 프로젝트의 이름입니다.
	- url : 프로젝트 사이트가 있다면 사이트 URL을 등록하는 것이 가능합니다.


참고 : [부스트코스](https://www.edwith.org/boostcourse-web/lecture/16723/)